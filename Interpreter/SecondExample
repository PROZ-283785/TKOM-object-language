#rekurencja
main(){

    x = 2;
    y = 6;
    z = 0;

    power(x, y, z);
    out<< z;
########
    c = 0;
    d = 5;

    sum(d, c);
    out<< c;
########
    n = 12;
    result = None;

    fibonacci(n, result);
    out<<result;
}



power(x, y, z out){

    when( y == 0 ){
        z = 1;
    } else {
        c = y - 1;
        d = None;
        power(x, c, d);
        z = x * d;
    }

}

sum(b in, c out){

    when( b >= 1 ){
        a = b - 1;
        d = 0;
        sum(a, d);
        c = d + b;
    } else {
        c = 0;
    }

}

fibonacci(n, result out){

    when(n == 1 || n == 0){
        result = 1;
    } else {

        fib1 = 0;
        n1 = n - 1;
        fibonacci(n1, fib1);
        fib2 = 0;
        n2 = n - 2;
        fibonacci(n2, fib2);
        result = fib1 + fib2;
    }

}